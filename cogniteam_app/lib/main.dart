import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:flutter_dotenv/flutter_dotenv.dart';
import 'package:cogniteam_app/config/firebase_options.dart'; // Generated by FlutterFire
import 'package:cogniteam_app/navigation/app_router.dart'; // Import the router

Future<void> main() async {
  WidgetsFlutterBinding.ensureInitialized();

  // Load environment variables (e.g., API keys, backend URL)
  // Ensure you have a .env file in the root of cogniteam_app/
  try {
    await dotenv.load(fileName: ".env");
  } catch (e) {
    print("Error loading .env file (this is normal if it's not present): $e");
    // You might want to set default values or handle this case appropriately
  }

  // Initialize Firebase
  try {
    await Firebase.initializeApp(
      options: DefaultFirebaseOptions.currentPlatform,
    );
  } catch (e) {
    print("Error initializing Firebase: $e");
    // Handle Firebase initialization error (e.g., show an error screen)
  }

  runApp(
    ProviderScope( // Enables Riverpod for state management
      child: MyApp(),
    ),
  );
}

class MyApp extends ConsumerWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    final router = ref.watch(goRouterProvider); // Watch the GoRouter provider

    return MaterialApp.router(
      title: 'CogniTeamAI',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
        useMaterial3: true,
        visualDensity: VisualDensity.adaptivePlatformDensity,
      ),
      routerConfig: router, // Use the router configuration from GoRouter
    );
  }
}
